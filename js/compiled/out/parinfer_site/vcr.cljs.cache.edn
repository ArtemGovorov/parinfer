;; Analyzed by ClojureScript 1.7.122
{:use-macros {html sablono.core, go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name parinfer-site.vcr, :imports nil, :requires {cljs.core.async cljs.core.async, om om.core, om.core om.core, sablono.core sablono.core, parinfer-site.state parinfer-site.state, parinfer-site.editor-support parinfer-site.editor-support, cljs.pprint cljs.pprint, gdom goog.dom, goog.dom goog.dom}, :uses {get-prev-state parinfer-site.editor-support, timeout cljs.core.async, pprint cljs.pprint, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, state parinfer-site.state, alts! cljs.core.async}, :defs {parse-change {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 34, :column 7, :end-line 34, :end-column 19, :arglists (quote ([change]))}, :name parinfer-site.vcr/parse-change, :variadic false, :file "src/parinfer_site/vcr.cljs", :end-column 19, :method-params ([change]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([change]))}, ->t_parinfer_site$vcr21496 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([controls-view p__21485 owner map__21494 data target-key show? meta21497])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name parinfer-site.vcr/->t_parinfer_site$vcr21496, :variadic false, :file "src/parinfer_site/vcr.cljs", :method-params ([controls-view p__21485 owner map__21494 data target-key show? meta21497]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 142, :max-fixed-arity 8, :fn-var true, :arglists (quote ([controls-view p__21485 owner map__21494 data target-key show? meta21497])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, controls-view {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 140, :column 7, :end-line 140, :end-column 20, :arglists (quote ([{:keys [target-key show?], :as data} owner]))}, :name parinfer-site.vcr/controls-view, :variadic false, :file "src/parinfer_site/vcr.cljs", :end-column 20, :method-params ([p__21485 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [target-key show?], :as data} owner]))}, render-controls! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 158, :column 7, :end-line 158, :end-column 23, :arglists (quote ([]))}, :name parinfer-site.vcr/render-controls!, :variadic false, :file "src/parinfer_site/vcr.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, vcr {:name parinfer-site.vcr/vcr, :file "src/parinfer_site/vcr.cljs", :line 16, :column 1, :end-line 16, :end-column 13, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 16, :column 10, :end-line 16, :end-column 13}}, parse-pos {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 29, :column 7, :end-line 29, :end-column 16, :arglists (quote ([pos]))}, :name parinfer-site.vcr/parse-pos, :variadic false, :file "src/parinfer_site/vcr.cljs", :end-column 16, :method-params ([pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pos]))}, parse-selection {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 49, :column 7, :end-line 49, :end-column 22, :arglists (quote ([selection]))}, :name parinfer-site.vcr/parse-selection, :variadic false, :file "src/parinfer_site/vcr.cljs", :end-column 22, :method-params ([selection]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([selection]))}, done-recording! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 77, :column 7, :end-line 77, :end-column 22, :arglists (quote ([key-]))}, :name parinfer-site.vcr/done-recording!, :variadic false, :file "src/parinfer_site/vcr.cljs", :end-column 22, :method-params ([key-]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key-]))}, SHOW_CONTROLS {:name parinfer-site.vcr/SHOW_CONTROLS, :file "src/parinfer_site/vcr.cljs", :line 134, :column 1, :end-line 134, :end-column 19, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 134, :column 6, :end-line 134, :end-column 19}}, empty-recording {:name parinfer-site.vcr/empty-recording, :file "src/parinfer_site/vcr.cljs", :line 19, :column 1, :end-line 19, :end-column 21, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 19, :column 6, :end-line 19, :end-column 21}}, apply-selections {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 59, :column 7, :end-line 59, :end-column 23, :arglists (quote ([cm selections]))}, :name parinfer-site.vcr/apply-selections, :variadic false, :file "src/parinfer_site/vcr.cljs", :end-column 23, :method-params ([cm selections]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cm selections]))}, ->t_parinfer_site$vcr21488 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([controls-view p__21485 owner map__21486 data target-key show? meta21489])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name parinfer-site.vcr/->t_parinfer_site$vcr21488, :variadic false, :file "src/parinfer_site/vcr.cljs", :method-params ([controls-view p__21485 owner map__21486 data target-key show? meta21489]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 142, :max-fixed-arity 8, :fn-var true, :arglists (quote ([controls-view p__21485 owner map__21486 data target-key show? meta21489])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, play-recording! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 81, :column 7, :end-line 81, :end-column 22, :arglists (quote ([key-]))}, :name parinfer-site.vcr/play-recording!, :variadic false, :file "src/parinfer_site/vcr.cljs", :end-column 22, :method-params ([key-]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key-]))}, controls-state {:name parinfer-site.vcr/controls-state, :file "src/parinfer_site/vcr.cljs", :line 136, :column 1, :end-line 136, :end-column 24, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 136, :column 10, :end-line 136, :end-column 24}}, apply-change {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 41, :column 7, :end-line 41, :end-column 19, :arglists (quote ([cm {:keys [text from to origin]}]))}, :name parinfer-site.vcr/apply-change, :variadic false, :file "src/parinfer_site/vcr.cljs", :end-column 19, :method-params ([cm p__21111]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cm {:keys [text from to origin]}]))}, stop-playing! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 117, :column 7, :end-line 117, :end-column 20, :arglists (quote ([key-]))}, :name parinfer-site.vcr/stop-playing!, :variadic false, :file "src/parinfer_site/vcr.cljs", :end-column 20, :method-params ([key-]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key-]))}, t_parinfer_site$vcr21496 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name parinfer-site.vcr/t_parinfer_site$vcr21496, :file "src/parinfer_site/vcr.cljs", :type true, :anonymous true, :column 3, :line 142, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, parse-selections {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 55, :column 7, :end-line 55, :end-column 23, :arglists (quote ([selections]))}, :name parinfer-site.vcr/parse-selections, :variadic false, :file "src/parinfer_site/vcr.cljs", :end-column 23, :method-params ([selections]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([selections]))}, t_parinfer_site$vcr21488 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name parinfer-site.vcr/t_parinfer_site$vcr21488, :file "src/parinfer_site/vcr.cljs", :type true, :anonymous true, :column 3, :line 142, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, print-recording! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 122, :column 7, :end-line 122, :end-column 23, :arglists (quote ([key-])), :doc "Pretty print the data to the console, so we can paste it into vcr_data.cljs"}, :name parinfer-site.vcr/print-recording!, :variadic false, :file "src/parinfer_site/vcr.cljs", :end-column 23, :method-params ([key-]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key-])), :doc "Pretty print the data to the console, so we can paste it into vcr_data.cljs"}, start-recording! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/vcr.cljs", :line 67, :column 7, :end-line 67, :end-column 23, :arglists (quote ([key-]))}, :name parinfer-site.vcr/start-recording!, :variadic false, :file "src/parinfer_site/vcr.cljs", :end-column 23, :method-params ([key-]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key-]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, sablono.core sablono.core, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{p__21485 :target-key :loop-delay owner controls-view data :else meta21497 :selections :as :dt target-key :recur :timescale :ch :show? :cm map__21486 :head :keys :line meta21489 :from :recording? :init-value :loop? show? :changes :origin :anchor :target quote :change :arglists map__21494 :last-time :text :stop-chan :to}, :order [:changes :init-value :last-time :recording? :line :ch :from :to :text :origin :anchor :head :cm :stop-chan :timescale :loop? :loop-delay :recur :change :selections :dt :else :show? :target-key controls-view :arglists quote :keys :as target-key show? data owner p__21485 map__21486 meta21489 map__21494 meta21497 :target]}, :doc "VCR - editor animation recording and playback"}