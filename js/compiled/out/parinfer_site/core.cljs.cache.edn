;; Analyzed by ClojureScript 1.7.122
{:use-macros {html sablono.core}, :excludes #{}, :name parinfer-site.core, :imports nil, :requires {paren-mode parinfer.paren-mode, vcr-data parinfer-site.vcr-data, parinfer-site.editor-support parinfer-site.editor-support, parinfer-site.toc parinfer-site.toc, parinfer.string parinfer.string, parinfer.indent-mode parinfer.indent-mode, toc parinfer-site.toc, parinfer.paren-mode parinfer.paren-mode, sablono.core sablono.core, parinfer-site.vcr-data parinfer-site.vcr-data, parinfer-site.vcr parinfer-site.vcr, indent-mode parinfer.indent-mode, om.core om.core, parinfer-site.gears parinfer-site.gears, om om.core, parinfer-site.editor parinfer-site.editor, parinfer-site.state parinfer-site.state}, :uses {get-prev-state parinfer-site.editor-support, create-regular-editor! parinfer-site.editor, render-controls! parinfer-site.vcr, vcr parinfer-site.vcr, create-gears! parinfer-site.gears, play-recording! parinfer-site.vcr, state parinfer-site.state, start-editor-sync! parinfer-site.editor, stop-playing! parinfer-site.vcr, get-lines parinfer.string, create-editor! parinfer-site.editor}, :defs {index-gears {:name parinfer-site.core/index-gears, :file "src/parinfer_site/core.cljs", :line 197, :column 1, :end-line 197, :end-column 17, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/core.cljs", :line 197, :column 6, :end-line 197, :end-column 17}}, create-indent-before-after! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/core.cljs", :line 23, :column 7, :end-line 23, :end-column 34, :arglists (quote ([]))}, :name parinfer-site.core/create-indent-before-after!, :variadic false, :file "src/parinfer_site/core.cljs", :end-column 34, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, render-dev! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/core.cljs", :line 270, :column 7, :end-line 270, :end-column 18, :arglists (quote ([]))}, :name parinfer-site.core/render-dev!, :variadic false, :file "src/parinfer_site/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, state-viewer {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/core.cljs", :line 275, :column 7, :end-line 275, :end-column 19, :arglists (quote ([{:keys [postline-states cursor-line]} owner]))}, :name parinfer-site.core/state-viewer, :variadic false, :file "src/parinfer_site/core.cljs", :end-column 19, :method-params ([p__32679 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 275, :end-line 275, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [postline-states cursor-line]} owner]))}, create-index-gears! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/core.cljs", :line 259, :column 7, :end-line 259, :end-column 26, :arglists (quote ([]))}, :name parinfer-site.core/create-index-gears!, :variadic false, :file "src/parinfer_site/core.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 259, :end-line 259, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, render-debug-state! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/core.cljs", :line 297, :column 7, :end-line 297, :end-column 26, :arglists (quote ([]))}, :name parinfer-site.core/render-debug-state!, :variadic false, :file "src/parinfer_site/core.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 297, :end-line 297, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, svg-opts {:name parinfer-site.core/svg-opts, :file "src/parinfer_site/core.cljs", :line 195, :column 1, :end-line 195, :end-column 14, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/core.cljs", :line 195, :column 6, :end-line 195, :end-column 14}}, render-index! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/core.cljs", :line 263, :column 7, :end-line 263, :end-column 20, :arglists (quote ([]))}, :name parinfer-site.core/render-index!, :variadic false, :file "src/parinfer_site/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 263, :end-line 263, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, index-anims {:name parinfer-site.core/index-anims, :file "src/parinfer_site/core.cljs", :line 140, :column 1, :end-line 140, :end-column 17, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/core.cljs", :line 140, :column 6, :end-line 140, :end-column 17}}, init! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/core.cljs", :line 307, :column 7, :end-line 307, :end-column 12, :arglists (quote ([]))}, :name parinfer-site.core/init!, :variadic false, :file "src/parinfer_site/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 307, :end-line 307, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, t_parinfer_site$core32682 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name parinfer-site.core/t_parinfer_site$core32682, :file "src/parinfer_site/core.cljs", :type true, :anonymous true, :column 3, :line 277, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, animate-when-visible! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/core.cljs", :line 134, :column 7, :end-line 134, :end-column 28, :arglists (quote ([key-]))}, :name parinfer-site.core/animate-when-visible!, :variadic false, :file "src/parinfer_site/core.cljs", :end-column 28, :method-params ([key-]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key-]))}, base-gears {:name parinfer-site.core/base-gears, :file "src/parinfer_site/core.cljs", :line 185, :column 1, :end-line 185, :end-column 16, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/core.cljs", :line 185, :column 6, :end-line 185, :end-column 16}}, ->t_parinfer_site$core32731 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([state-viewer p__32679 owner map__32729 postline-states cursor-line meta32732])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name parinfer-site.core/->t_parinfer_site$core32731, :variadic false, :file "src/parinfer_site/core.cljs", :method-params ([state-viewer p__32679 owner map__32729 postline-states cursor-line meta32732]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 277, :max-fixed-arity 7, :fn-var true, :arglists (quote ([state-viewer p__32679 owner map__32729 postline-states cursor-line meta32732])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, create-index-editors! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/core.cljs", :line 84, :column 7, :end-line 84, :end-column 28, :arglists (quote ([]))}, :name parinfer-site.core/create-index-editors!, :variadic false, :file "src/parinfer_site/core.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, load-index-anims! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/core.cljs", :line 171, :column 7, :end-line 171, :end-column 24, :arglists (quote ([]))}, :name parinfer-site.core/load-index-anims!, :variadic false, :file "src/parinfer_site/core.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, t_parinfer_site$core32731 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name parinfer-site.core/t_parinfer_site$core32731, :file "src/parinfer_site/core.cljs", :type true, :anonymous true, :column 3, :line 277, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_parinfer_site$core32682 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([state-viewer p__32679 owner map__32680 postline-states cursor-line meta32683])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name parinfer-site.core/->t_parinfer_site$core32682, :variadic false, :file "src/parinfer_site/core.cljs", :method-params ([state-viewer p__32679 owner map__32680 postline-states cursor-line meta32683]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 277, :max-fixed-arity 7, :fn-var true, :arglists (quote ([state-viewer p__32679 owner map__32680 postline-states cursor-line meta32683])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, create-paren-before-after! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/core.cljs", :line 32, :column 7, :end-line 32, :end-column 33, :arglists (quote ([]))}, :name parinfer-site.core/create-paren-before-after!, :variadic false, :file "src/parinfer_site/core.cljs", :end-column 33, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {om om.core, om.core om.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:y map__32729 :cursor-line :caption state-viewer :indent :paredit :insert :not-displaced :displaced :watcher :wrap :next-x owner :parinfer meta32732 :splice :bottom :else cursor-line :displaced-after-balance :auto-indent :matchBrackets :x-pos :dt :paren-frac :not-displaced-on-enter :mode :width meta32683 p__32679 :parinfer-mode :warn-good :gear-attrs :postline-states :string :indent-mode :intro-paren :paren-comment :indent-multi :ch :enter :intro-comment :barf :paren :displaced-after-cursor-leaves :paren-tune :viewportMargin :power :in-x :keys :line :readOnly :factor :class :comment postline-states map__32680 :init-gears :stack :editor :warn-bad :right :intro-indent :side :indent-far :x :out-x :target quote :arglists :slurp :paren-mode :anim-frames :lineNumbers :styleActiveLine :classes :intro-insert :line-dy :svg-opts :paren-wrap :height :left :text :data :intro-paredit}, :order [:mode :readOnly :text :in-x :out-x :else :intro-indent :intro-insert :intro-comment :intro-paredit :intro-paren :parinfer-mode :paren-mode :indent :indent-far :indent-multi :line :comment :wrap :splice :barf :slurp :string :enter :warn-good :warn-bad :displaced :not-displaced :paren-tune :paren-frac :paren-comment :paren-wrap :displaced-after-balance :not-displaced-on-enter :displaced-after-cursor-leaves :matchBrackets :watcher :paren :x :y :factor :classes :caption :side :left :right :width :height :svg-opts :data :init-gears :anim-frames :gear-attrs :dt :power :auto-indent :paredit :parinfer :bottom :indent-mode :postline-states :cursor-line :insert :stack :class :line-dy :x-pos :next-x :ch state-viewer :arglists quote :keys postline-states cursor-line owner p__32679 map__32680 meta32683 map__32729 meta32732 :editor :viewportMargin :lineNumbers :styleActiveLine :target]}, :doc nil}