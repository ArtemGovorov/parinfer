;; Analyzed by ClojureScript 1.7.122
{:use-macros {html sablono.core}, :excludes #{}, :name parinfer-site.toc, :imports nil, :requires {om om.core, om.core om.core, sablono.core sablono.core, gdom goog.dom, goog.dom goog.dom}, :uses nil, :defs {get-sections! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/toc.cljs", :line 13, :column 7, :end-line 13, :end-column 20, :arglists (quote ([])), :doc "get a list of sections for the table of contents"}, :name parinfer-site.toc/get-sections!, :variadic false, :file "src/parinfer_site/toc.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "get a list of sections for the table of contents"}, init! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/toc.cljs", :line 97, :column 7, :end-line 97, :end-column 12, :arglists (quote ([]))}, :name parinfer-site.toc/init!, :variadic false, :file "src/parinfer_site/toc.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, t_parinfer_site$toc31093 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name parinfer-site.toc/t_parinfer_site$toc31093, :file "src/parinfer_site/toc.cljs", :type true, :anonymous true, :column 3, :line 75, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_parinfer_site$toc31093 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([toc-component p__31090 owner map__31091 sections section-map visible? meta31094])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name parinfer-site.toc/->t_parinfer_site$toc31093, :variadic false, :file "src/parinfer_site/toc.cljs", :method-params ([toc-component p__31090 owner map__31091 sections section-map visible? meta31094]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 75, :max-fixed-arity 8, :fn-var true, :arglists (quote ([toc-component p__31090 owner map__31091 sections section-map visible? meta31094])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_parinfer_site$toc31114 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name parinfer-site.toc/t_parinfer_site$toc31114, :file "src/parinfer_site/toc.cljs", :type true, :anonymous true, :column 3, :line 75, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_parinfer_site$toc31114 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([toc-component p__31090 owner map__31112 sections section-map visible? meta31115])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name parinfer-site.toc/->t_parinfer_site$toc31114, :variadic false, :file "src/parinfer_site/toc.cljs", :method-params ([toc-component p__31090 owner map__31112 sections section-map visible? meta31115]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 75, :max-fixed-arity 8, :fn-var true, :arglists (quote ([toc-component p__31090 owner map__31112 sections section-map visible? meta31115])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, track-section-visibility! {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/toc.cljs", :line 90, :column 7, :end-line 90, :end-column 32, :arglists (quote ([]))}, :name parinfer-site.toc/track-section-visibility!, :variadic false, :file "src/parinfer_site/toc.cljs", :end-column 32, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, state {:name parinfer-site.toc/state, :file "src/parinfer_site/toc.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/toc.cljs", :line 9, :column 10, :end-line 9, :end-column 15}}, toc-component {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/toc.cljs", :line 73, :column 7, :end-line 73, :end-column 20, :arglists (quote ([{:keys [sections section-map visible?]} owner]))}, :name parinfer-site.toc/toc-component, :variadic false, :file "src/parinfer_site/toc.cljs", :end-column 20, :method-params ([p__31090 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [sections section-map visible?]} owner]))}, sibling-section? {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/toc.cljs", :line 49, :column 7, :end-line 49, :end-column 23, :arglists (quote ([current sibling]))}, :name parinfer-site.toc/sibling-section?, :variadic false, :file "src/parinfer_site/toc.cljs", :end-column 23, :method-params ([current sibling]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([current sibling]))}, section-attrs {:protocol-inline nil, :meta {:file "/Users/swilliam/code/parinfer/site/src/parinfer_site/toc.cljs", :line 54, :column 7, :end-line 54, :end-column 20, :arglists (quote ([current active]))}, :name parinfer-site.toc/section-attrs, :variadic false, :file "src/parinfer_site/toc.cljs", :end-column 20, :method-params ([current active]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([current active]))}}, :require-macros {om om.core, om.core om.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{p__31090 :visible? owner :sections meta31115 visible? :ancestor-of-active? sections :show? :title :ancestors :level :div :section-elm :keys meta31094 map__31091 :id :class :section-map toc-component :stack :order :target quote :arglists section-map map__31112 :href :a}, :order [:sections :visible? :stack :level :id :ancestors :order :section-elm :title :show? :ancestor-of-active? :section-map :div :class :a :href toc-component :arglists quote :keys sections section-map visible? owner p__31090 map__31091 meta31094 map__31112 meta31115 :target]}, :doc "Table of contents generator and highlighting"}